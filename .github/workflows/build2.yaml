name: app-build-action
on:
  push:
    tags:
      - "v*"

jobs:
  # Android 构建
  build-android:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      # 签出代码
      - uses: actions/checkout@v4
        with:
          ref: master

      # 设置JAVA环境
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: 'gradle'

      # 设置Flutter环境
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          cache: true

      # 启用安卓构建
      - name: Enable Android
        run: flutter config --enable-android

      # 更新Flutter包
      - name: Restore packages
        run: |
          cd simple_live_app
          flutter pub get

      # 随机生成签名文件（仅个人使用）
      - name: Generate random keystore
        run: |
          mkdir -p simple_live_app/android
          keytool -genkey -v \
            -keystore simple_live_app/android/debug.jks \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -alias debugKey \
            -storepass android \
            -keypass android \
            -dname "CN=hashira,O=hashira,OU=Private,C=CN"
          echo "storeFile=debug.jks" > simple_live_app/android/key.properties
          echo "storePassword=android" >> simple_live_app/android/key.properties
          echo "keyPassword=android" >> simple_live_app/android/key.properties
          echo "keyAlias=debugKey" >> simple_live_app/android/key.properties

      # 打包APK
      - name: Build APK
        run: |
          cd simple_live_app
          flutter build apk --release --split-per-abi

      # 上传APK至Artifacts
      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: |
            simple_live_app/build/app/outputs/flutter-apk/*.apk

      # 读取版本信息
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: assets/app_version.json

      # 上传至Release
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ fromJson(steps.version.outputs.content).version }}"
          body: "${{ fromJson(steps.version.outputs.content).version_desc }}"
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            simple_live_app/build/app/outputs/flutter-apk/*.apk

      - run: echo "✅ Android build done, status ${{ job.status }}"

  # Linux 构建
  build-linux:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.x"
          cache: true

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libmpv-dev mpv

      - name: Enable Flutter Desktop
        run: flutter config --enable-linux-desktop

      - name: Restore Packages
        run: |
          cd simple_live_app
          flutter pub get

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Build Linux
        run: |
          cd simple_live_app
          flutter_distributor package --platform linux --targets deb,zip --skip-clean

      - name: Upload Linux APP to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: |
            simple_live_app/build/dist/*/*.deb
            simple_live_app/build/dist/*/*.zip

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: assets/app_version.json

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ fromJson(steps.version.outputs.content).version }}"
          body: "${{ fromJson(steps.version.outputs.content).version_desc }}"
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            simple_live_app/build/dist/*/*.deb
            simple_live_app/build/dist/*/*.zip

      - run: echo "✅ Linux build done, status ${{ job.status }}"

  # Windows 构建
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.x"
          cache: true

      - name: Enable Flutter Desktop
        run: flutter config --enable-windows-desktop

      - name: Restore Packages
        run: |
          cd simple_live_app
          flutter pub get

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Build Windows
        run: |
          cd simple_live_app
          flutter_distributor package --platform windows --targets msix,zip --skip-clean

      - name: Upload Windows APP to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: |
            simple_live_app/build/dist/*/*.msix
            simple_live_app/build/dist/*/*.zip

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: assets/app_version.json

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ fromJson(steps.version.outputs.content).version }}"
          body: "${{ fromJson(steps.version.outputs.content).version_desc }}"
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            simple_live_app/build/dist/*/*.msix
            simple_live_app/build/dist/*/*.zip

      - run: echo "✅ Windows build done, status ${{ job.status }}"
