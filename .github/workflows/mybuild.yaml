name: android-debug-build

# 手动触发
on:
  workflow_dispatch:
    inputs:
      branch:
        description: "要打包的分支"
        required: true
        default: "master"

jobs:
  build-android-debug:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      # 1. 签出代码
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      # 2. 设置 Java 环境
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: 'gradle'

      # 3. 设置 Flutter
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          cache: true

      # 4. 拉取依赖
      - name: Restore packages
        run: |
          cd simple_live_app
          flutter pub get

      # 5. 打包 Debug APK
      - name: Build Debug APK
        run: |
          cd simple_live_app
          flutter build apk --debug --split-per-abi

      # 6. 上传 APK 到 Artifact
      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-debug
          path: |
            simple_live_app/build/app/outputs/flutter-apk/app-armeabi-v7a-debug.apk
            simple_live_app/build/app/outputs/flutter-apk/app-arm64-v8a-debug.apk
            simple_live_app/build/app/outputs/flutter-apk/app-x86_64-debug.apk

      - run: echo "✅ Android Debug APK 打包完成，使用 debug key，可直接安装到设备"
